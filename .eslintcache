[{"C:\\Aswin\\robinhood-clone-master\\robinhood-clone-master\\src\\App.js":"1","C:\\Aswin\\robinhood-clone-master\\robinhood-clone-master\\src\\Stats.js":"2","C:\\Aswin\\robinhood-clone-master\\robinhood-clone-master\\src\\TimeLine.js":"3","C:\\Aswin\\robinhood-clone-master\\robinhood-clone-master\\src\\firebase.js":"4","C:\\Aswin\\robinhood-clone-master\\robinhood-clone-master\\src\\reportWebVitals.js":"5","C:\\Aswin\\robinhood-clone-master\\robinhood-clone-master\\src\\api.js":"6","C:\\Aswin\\robinhood-clone-master\\robinhood-clone-master\\src\\StatsRow.js":"7","C:\\Aswin\\robinhood-clone-master\\robinhood-clone-master\\src\\LineGraph.js":"8"},{"size":423,"mtime":1624634776458,"results":"9","hashOfConfig":"10"},{"size":2777,"mtime":1624634776614,"results":"11","hashOfConfig":"10"},{"size":703,"mtime":1624634776645,"results":"12","hashOfConfig":"10"},{"size":555,"mtime":1624634776723,"results":"13","hashOfConfig":"10"},{"size":362,"mtime":1624634776786,"results":"14","hashOfConfig":"10"},{"size":81,"mtime":1624634776708,"results":"15","hashOfConfig":"10"},{"size":827,"mtime":1624634776630,"results":"16","hashOfConfig":"10"},{"size":1900,"mtime":1624634776536,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"2b5f8k",{"filePath":"20","messages":"21","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22","usedDeprecatedRules":"23"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Aswin\\robinhood-clone-master\\robinhood-clone-master\\src\\App.js",[],"C:\\Aswin\\robinhood-clone-master\\robinhood-clone-master\\src\\Stats.js",["36","37","38"],"import React, { useState, useEffect } from \"react\";\nimport \"./Stats.css\";\nimport MoreHorizIcon from \"@material-ui/icons/MoreHoriz\";\nimport StatsRow from \"./StatsRow\";\nimport { key } from \"./api\";\nimport axios from \"axios\";\nimport { db } from \"./firebase\";\n\nconst BASE_URL = \"https://finnhub.io/api/v1/quote?symbol=\";\nconst KEY_URL = `&token=${key}`;\n\n\nconst testData = []; \n\nfunction Stats() {\n  const [stocksData, setStocksData] = useState([]);\n  const [myStocks, setMyStocks] = useState([]);\n\n  const getMyStocks = () => {\n    db\n    .collection('myStocks')\n    .onSnapshot(snapshot => {\n        let promises = [];\n        let tempData = []\n        snapshot.docs.map((doc) => {\n          promises.push(getStocksData(doc.data().ticker)\n          .then(res => {\n            tempData.push({\n              id: doc.id,\n              data: doc.data(),\n              info: res.data\n            })\n          })\n        )})\n        Promise.all(promises).then(()=>{\n          setMyStocks(tempData);\n        })\n    })\n  }\n\n  const getStocksData = (stock) => {\n    return axios\n      .get(`${BASE_URL}${stock}${KEY_URL}`)\n      .catch((error) => {\n        console.error(\"Error\", error.message);\n      });\n  };\n\n  useEffect(() => {\n    const stocksList = [\"AAPL\", \"MSFT\", \"TSLA\", \"FB\", \"BABA\", \"UBER\", \"DIS\", \"SBUX\"];\n\n    getMyStocks();\n    let promises = [];\n    stocksList.map((stock) => {\n      promises.push(\n        getStocksData(stock)\n        .then((res) => {\n          testData.push({\n            name: stock,\n            ...res.data\n          });\n        })\n      )\n    });\n\n    Promise.all(promises).then(()=>{\n      console.log(testData);\n      setStocksData(testData);\n    })\n  }, []);\n\n  return (\n    <div className=\"stats\">\n      <div className=\"stats__container\">\n        <div className=\"stats__header\">\n          <p> Stocks</p>\n          <MoreHorizIcon />\n        </div>\n        <div className=\"stats__content\">\n          <div className=\"stats__rows\">\n            {myStocks.map((stock) => (\n              <StatsRow\n                key={stock.data.ticker}\n                name={stock.data.ticker}\n                openPrice={stock.info.o}\n                volume={stock.data.shares}\n                price={stock.info.c}\n              />\n            ))}\n          </div>\n        </div>\n        <div className=\"stats__header stats-lists\">\n          <p>Lists</p>\n        </div>\n        <div className=\"stats__content\">\n          <div className=\"stats__rows\">\n            {stocksData.map((stock) => (\n              <StatsRow\n                key={stock.name}\n                name={stock.name}\n                openPrice={stock.o}\n                price={stock.c}\n              />\n            ))}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Stats;",["39","40"],"C:\\Aswin\\robinhood-clone-master\\robinhood-clone-master\\src\\TimeLine.js",[],"C:\\Aswin\\robinhood-clone-master\\robinhood-clone-master\\src\\firebase.js",[],"C:\\Aswin\\robinhood-clone-master\\robinhood-clone-master\\src\\reportWebVitals.js",[],"C:\\Aswin\\robinhood-clone-master\\robinhood-clone-master\\src\\api.js",["41"],"C:\\Aswin\\robinhood-clone-master\\robinhood-clone-master\\src\\StatsRow.js",["42"],"C:\\Aswin\\robinhood-clone-master\\robinhood-clone-master\\src\\LineGraph.js",[],{"ruleId":"43","severity":1,"message":"44","line":25,"column":33,"nodeType":"45","messageId":"46","endLine":25,"endColumn":35},{"ruleId":"43","severity":1,"message":"44","line":54,"column":28,"nodeType":"45","messageId":"46","endLine":54,"endColumn":30},{"ruleId":"47","severity":1,"message":"48","line":70,"column":6,"nodeType":"49","endLine":70,"endColumn":8,"suggestions":"50"},{"ruleId":"51","replacedBy":"52"},{"ruleId":"53","replacedBy":"54"},{"ruleId":"55","severity":1,"message":"56","line":1,"column":8,"nodeType":"57","messageId":"58","endLine":1,"endColumn":13},{"ruleId":"59","severity":1,"message":"60","line":21,"column":9,"nodeType":"61","endLine":21,"endColumn":44},"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getMyStocks'. Either include it or remove the dependency array.","ArrayExpression",["62"],"no-native-reassign",["63"],"no-negated-in-lhs",["64"],"no-unused-vars","'axios' is defined but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",{"desc":"65","fix":"66"},"no-global-assign","no-unsafe-negation","Update the dependencies array to be: [getMyStocks]",{"range":"67","text":"68"},[1683,1685],"[getMyStocks]"]